[General]
# network
network = flora.simulations.LoRaMesh
**.maxTransmissionDuration = 4s
**.energyDetection = -110dBm

# logging
#cmdenv-autoflush = true
#cmdenv-status-frequency = 10000000s
#cmdenv-express-mode = false
#cmdenv-output-file = cmd_env_log.txt
**.vector-recording = true

# random numbers generator
rng-class = "cMersenneTwister"
seed-set = ${repetition}

# simulation timing
simtime-resolution = -11
sim-time-limit = 49h
#**.loRaNodes[*].**.stopRoutingAfterDataDone = 600s
warmup-period = 1h

# power consumption features
**.loRaNodes[*].hasStatus = true
**.loRaNodes[*].energyStorage.typename = "SimpleEpEnergyStorage"
**.loRaNodes[*].energyStorage.nominalCapacity = 10000J
#**.loRaNodes[*].energyStorage.typename = "IdealEpEnergyStorage"
**.loRaNodes[*].**.energySourceModule = "energyStorage"
# radio
**.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaRadioEnergyConsumer"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
# app (MCU)
**.loRaNodes[*].appEnergyConsumer.typename = "LoRaAppEnergyConsumer"
**.loRaNodes[*].appEnergyConsumer.sleepAppPowerConsumption = 1mW
**.loRaNodes[*].appEnergyConsumer.runAppPowerConsumption = 100mW
**.loRaNodes[*].app[*].switchingTimes = "ms 0 0 10 0"  #(TIME_UNIT, SLEEP->RUN, SLEEP->SLEEP, RUN->SLEEP, RUN->RUN)

#general network features
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 10000m
**.constraintAreaMaxY = 10000m
**.constraintAreaMaxZ = 0m
**.ipv4Delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.pathLoss.typename = "LoRaLogNormalShadowing"
**.sigma = 0
**.minInterferenceTime = 0s

**.radio.separateTransmissionParts = false
**.radio.separateReceptionParts = false

# cache features
**.LoRaMedium.mediumLimitCache.typename  = "LoRaMediumCache"
**.LoRaMedium.rangeFilter = "communicationRange"
**.LoRaMedium.neighborCache.typename = "LoRaNeighborCache"
**.LoRaMedium.neighborCache.range = 546m
**.LoRaMedium.neighborCache.refillPeriod = 3000s

#[Config playground]
# network features
**.numberOfGateways = 0


# data packets generation
**.sendPacketsContinuously = true
**.onlyNode0SendsPackets = true
**.numberOfDestinationsPerNode = 0 #it should be smaller than numberOfNodes, or 0 to send to all nodes
**.numberOfPacketsPerDestination = 1
**.dataPacketDefaultSize = 20B
**.packetTTL = 20 #if 0, LoraNodeApp.cc calculates value
**.timeToFirstDataPacket = 6000s
**.timeToNextDataPacketDist = "uniform"
**.timeToNextDataPacketMin = 30s
**.timeToNextDataPacketMax = 60s
**.timeToNextDataPacketAvg = 45s

# forwarded packets
**.numberOfPacketsToForward = 0 #0 for no limit 
**.ownDataPriority = 0 #0: forward priority; 1: own data priority

# routing settings
**.routingMetric = 3  #see LoRaNodeApp.cc for the values
**.routeTimeout = 600s
**.windowSize = 10
**.storeBestRouteOnly = false
**.getRoutesFromDataPackets = true
#**.routingPacketPriority = 0.5
**.routingPacketPriority = 0.1
**.routingPacketMaxSize = 12B
#**.timeToFirstRoutingPacket = 100s+uniform(0s, 120s)
**.timeToFirstRoutingPacket = 100s
**.timeToNextRoutingPacketDist = "uniform"
**.timeToNextRoutingPacketMin = 120s
**.timeToNextRoutingPacketMax = 240s
**.timeToNextRoutingPacketAvg = 180s

# duty cycle
**.dutyCycle = 0.01
#**.dutyCycle = 0.999
**.enforceDutyCycle = false

# LoRa settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**initialLoRaSF = 12
**.loRaNodes[*].**minLoRaSF = 7
**.loRaNodes[*].**maxLoRaSF = 12
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 1
**.loRaNodes[*].**initialLoRaTP = 20dBm
**.loRaNodes[*].**initialLoRaCAD = true
**.loRaNodes[*].**initialLoRaCADatt = 0dB
**.loRaNodes[*].numApps = 1
**.loRaNodes[*].app[0].typename = "LoRaNodeApp"
**.loRaNodes[0].**.evaluateADRinNode = true

# nodes placement
#**.loRaNodes[*].deploymentType = "grid"
#**.loRaNodes[*].minX = 0m
#**.loRaNodes[*].sepX = 250m
#**.loRaNodes[*].minY = 0m
#**.loRaNodes[*].sepY = 250m

# number of nodes
**.numberOfNodes = 19

**.loRaNodes[*].deploymentType = "manual"

**.loRaNodes[0].**.initialX = 200m
**.loRaNodes[0].**.initialY = 200m

**.loRaNodes[1].**.initialX = 500m
**.loRaNodes[1].**.initialY = 500m

**.loRaNodes[2].**.initialX = 800m
**.loRaNodes[2].**.initialY = 800m

**.loRaNodes[3].**.initialX = 1223m
**.loRaNodes[3].**.initialY = 800m

**.loRaNodes[4].**.initialX = 1646m
**.loRaNodes[4].**.initialY = 800m

**.loRaNodes[5].**.initialX = 2069m
**.loRaNodes[5].**.initialY = 800m

**.loRaNodes[6].**.initialX = 2369m
**.loRaNodes[6].**.initialY = 1100m

**.loRaNodes[7].**.initialX = 2669m
**.loRaNodes[7].**.initialY = 1400m

**.loRaNodes[8].**.initialX = 2669m
**.loRaNodes[8].**.initialY = 1869m

**.loRaNodes[9].**.initialX = 2369m
**.loRaNodes[9].**.initialY = 2169m

**.loRaNodes[10].**.initialX = 2069m
**.loRaNodes[10].**.initialY = 2469m

**.loRaNodes[11].**.initialX = 1646m
**.loRaNodes[11].**.initialY = 2469m

**.loRaNodes[12].**.initialX = 1223m
**.loRaNodes[12].**.initialY = 2469m

**.loRaNodes[13].**.initialX = 800m
**.loRaNodes[13].**.initialY = 2469m

**.loRaNodes[14].**.initialX = 800m
**.loRaNodes[14].**.initialY = 2051m

#**.loRaNodes[15].**.initialX = 800m
#**.loRaNodes[15].**.initialY = 1634m

**.loRaNodes[16].**.initialX = 800m
**.loRaNodes[16].**.initialY = 1217m

**.loRaNodes[17].**.initialX = 500m
**.loRaNodes[17].**.initialY = 2769m

**.loRaNodes[18].**.initialX = 200m
**.loRaNodes[18].**.initialY = 3069m
#
##**.loRaNodes[0].**.initialX = 50m
##**.loRaNodes[0].**.initialY = 50m
##
##**.loRaNodes[1].**.initialX = 200m
##**.loRaNodes[1].**.initialY = 200m
##
##**.loRaNodes[2].**.initialX = 350m
##**.loRaNodes[2].**.initialY = 350m
##
##**.loRaNodes[3].**.initialX = 562m
##**.loRaNodes[3].**.initialY = 350m
##
##**.loRaNodes[4].**.initialX = 773m
##**.loRaNodes[4].**.initialY = 350m

# visualizer
*.visualizer.mediumVisualizer.communicationRangeLineColor = "white"
#*.visualizer.mediumVisualizer.
#*.visualizer.mediumVisualizer.displayMainPowerDensityMap = true

*.visualizer.mediumVisualizer.displayCommunicationRanges = true
*.visualizer.mediumVisualizer.mediumModule = "LoRaMedium"
